name: Terraform CI/CD  

on:
  push:
    branches:
      - main

jobs:
  terraform:   
    name: 'Terraform Lint, Security Check, and Deploy'
    runs-on: ubuntu-latest

    env:
      AWS_REGION: 'ap-south-1'
      TF_VERSION: '1.4.0'   
      TFLINT_VERSION: '0.46.1'  
      TFSEC_VERSION: '1.28.1'   

    steps:
    - name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Verify AWS Identity
      run: aws sts get-caller-identity

    - name: 'Set up Terraform'
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Cache Terraform init
      uses: actions/cache@v2
      with:
        path: ~/.terraform
        key: terraform-${{ runner.os }}-${{ hashFiles('**/*.tf') }}
        restore-keys: |
          terraform-${{ runner.os }}-

    - name: 'Install TFlint'
      run: |
        curl -sLo tflint.zip https://github.com/terraform-linters/tflint/releases/download/v${{ env.TFLINT_VERSION }}/tflint_linux_amd64.zip
        unzip tflint.zip -d /usr/local/bin/
        tflint --version

    - name: 'Install tfsec'
      run: |
        curl -sLo tfsec https://github.com/aquasecurity/tfsec/releases/download/v${{ env.TFSEC_VERSION }}/tfsec-linux-amd64
        chmod +x tfsec
        mv tfsec /usr/local/bin/
        tfsec --version

    - name: 'Terraform Init'
      run: terraform init ./test/S3

    - name: 'Terraform Format Check'
      run: terraform fmt -check ./test/S3

    - name: 'Terraform Validate'
      run: terraform validate ./test/S3

    - name: 'TFLint'
      run: |
        tflint --init ./test/S3
        tflint ./test/S3

    - name: 'tfsec'
      run: tfsec ./test/S3

    - name: 'Terraform Plan'
      run: terraform plan -out=tfplan ./test/S3

    - name: 'Show Terraform Plan'
      run: terraform show tfplan

    - name: 'Terraform Apply'
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve ./test/S3
